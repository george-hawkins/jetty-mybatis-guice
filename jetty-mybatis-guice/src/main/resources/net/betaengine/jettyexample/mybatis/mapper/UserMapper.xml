<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.betaengine.jettyexample.mybatis.mapper.UserMapper">

    <select id="getUserById" resultType="User">
        SELECT 
            user_id as userId, 
            email_id as emailId , 
            password, 
            first_name as firstName, 
            last_name as lastName
        FROM USERS 
        WHERE USER_ID = #{userId}
    </select>

    <!-- Above we use 'AS' to rename columns so MyBatis knows how to map things, here we use a resultMap. -->
    <!--  Instead of using FQNs for classes we can register aliases when creating the MyBatisModule. -->
    <resultMap type="User" id="UserResult">
        <id property="userId" column="user_id"/>
        <result property="emailId" column="email_id"/>
        <result property="password" column="password"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
    </resultMap>
    <select id="getAllUsers" resultMap="UserResult">
        SELECT * FROM USERS
    </select>

    <insert id="insertUser" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO USERS(email_id, password, first_name, last_name)
        VALUES(#{emailId}, #{password}, #{firstName}, #{lastName})
    </insert>

    <update id="updateUser">
        UPDATE USERS 
        SET
            PASSWORD= #{password},
            FIRST_NAME = #{firstName},
            LAST_NAME = #{lastName}
        WHERE USER_ID = #{userId}
    </update>

    <delete id="deleteUser">
        DELETE FROM USERS WHERE USER_ID = #{userId}
    </delete>

</mapper>
